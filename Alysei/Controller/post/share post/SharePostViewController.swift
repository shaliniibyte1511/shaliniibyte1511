//
//  SharePostViewController.swift
//  Alysei
//
//  Created by Janu Gandhi on 20/08/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SharePostDisplayLogic: class {
}

class SharePostViewController: UIViewController, SharePostDisplayLogic {
    var interactor: SharePostBusinessLogic?
    var router: (NSObjectProtocol & SharePostRoutingLogic & SharePostDataPassing)?

    // MARK:- Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK:- Setup

    private func setup() {
        let viewController = self
        let interactor = SharePostInteractor()
        let presenter = SharePostPresenter()
        let router = SharePostRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK:- View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()

        var name = ""
        if (kSharedUserDefaults.loggedInUserModal.displayName?.count ?? 0) > 0 {
            name = kSharedUserDefaults.loggedInUserModal.displayName ?? ""
        } else if (kSharedUserDefaults.loggedInUserModal.companyName?.count ?? 0) > 0 {
            name = kSharedUserDefaults.loggedInUserModal.companyName ?? ""
        } else if (kSharedUserDefaults.loggedInUserModal.restaurantName?.count ?? 0) > 0 {
            name = kSharedUserDefaults.loggedInUserModal.restaurantName ?? ""
        }
//        let name = (kSharedUserDefaults.loggedInUserModal.displayName?.count ?? 0) > 0 ?  kSharedUserDefaults.loggedInUserModal.displayName : ""
        
//            ((kSharedUserDefaults.loggedInUserModal.companyName?.count > 0) ?  kSharedUserDefaults.loggedInUserModal.companyName :
            // ?? kSharedUserDefaults.loggedInUserModal.companyName ?? kSharedUserDefaults.loggedInUserModal.restaurantName ?? ""
        self.usernameLabel.text = "\(name)"

        if let imageURLString = kSharedUserDefaults.loggedInUserModal.UserAvatar_id?.attachment_url {
            self.userProfileImage.setImage(withString: "\(kImageBaseUrl)\(imageURLString)")

            self.userProfileImage.contentMode = .scaleAspectFill
            self.userProfileImage.layer.cornerRadius = self.userProfileImage.frame.height / 2.0
            self.userProfileImage.layer.masksToBounds = true

        }

    }

    //MARK:- IBOutlets

    @IBOutlet var backButton: UIButtonExtended!
    @IBOutlet var userProfileImage: UIImageView!
    @IBOutlet var usernameLabel: UILabel!
    @IBOutlet var privacyTextfield: UITextField!
    @IBOutlet var shareableTextLabel: UITextField!
    @IBOutlet var imageCollectionView: UICollectionView!
    @IBOutlet var postOwnerUsernameLabel: UILabel!

    // MARK:- IBAction methods

    @IBAction func backButtonTapped(_ sender: Any) {
//        showAlert(withMessage: "dummy")
        self.navigationController?.popViewController(animated: true)
//        self.dismiss(animated: true, completion: nil)
    }

    @IBAction func postButtonTapped(_ sender: Any) {
    }
    // MARK:- protocol methods
    
}

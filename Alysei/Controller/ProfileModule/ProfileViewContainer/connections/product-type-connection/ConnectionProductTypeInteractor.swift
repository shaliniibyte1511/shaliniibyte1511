//
//  ConnectionProductTypeInteractor.swift
//  Alysei
//
//  Created by SHALINI YADAV on 6/14/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ConnectionProductTypeBusinessLogic
{
    func doSomething(request: ConnectionProductType.Something.Request)
    func showConnectionProduct()
}

protocol ConnectionProductTypeDataStore
{
    //var name: String { get set }
}

class ConnectionProductTypeInteractor: ConnectionProductTypeBusinessLogic, ConnectionProductTypeDataStore
{
    
    var presenter: ConnectionProductTypePresentationLogic?
    var worker: ConnectionProductTypeWorker?
    var productData = [SignUpOptionsDataModel]()
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: ConnectionProductType.Something.Request)
    {
        worker = ConnectionProductTypeWorker()
        worker?.doSomeWork()
        
        let response = ConnectionProductType.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func showConnectionProduct(){
        do {
            let urlString = APIUrl.Connection.kProductTypeCategory

            guard let request = WebServices.shared.buildURLRequest(urlString, method: .GET) else {
                return
            }
            print("urlRequest-----------------------------------\(request)")
            TANetworkManager.sharedInstance.requestApi(withServiceName: APIUrl.kProductConnection, requestMethod: .GET, requestParameters: [:], withProgressHUD: true) { (dictResponse, error, errorType, statusCode) in
                
                let response = dictResponse as? [String:Any]
                if let data = response?["data"] as? [[String:Any]]{
                    self.productData = data.map({SignUpOptionsDataModel.init(withDictionary: $0)})
                    print("Count ------------------------------\(self.productData.count )")
                    
                    self.presenter?.showProductCategory(self.productData, true)
                }
            }
//            WebServices.shared.request(request) { data, URLResponse, statusCode, error in
//                print("Show Product Screen--------------------------\(data ?? Data())")
//                guard let data = data else { return }
//                self.presenter?.showProductCategory(data, true)
//            }
        }

    }
}

//
//  UserProductListViewController.swift
//  Alysei
//
//  Created by SHALINI YADAV on 6/14/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol UserProductListDisplayLogic: class
{
  func displaySomething(viewModel: UserProductList.Something.ViewModel)
}

class UserProductListViewController: UIViewController, UserProductListDisplayLogic
{
  var interactor: UserProductListBusinessLogic?
  var router: (NSObjectProtocol & UserProductListRoutingLogic & UserProductListDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = UserProductListInteractor()
    let presenter = UserProductListPresenter()
    let router = UserProductListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
    
    @IBOutlet weak var tableView: UITableView!
  
    var productData: [SignUpOptionsDataModel]?
    var selectedProductId = [String]()
    var selectedProductName = [String]()
    var selectProductCallback: (([String], [String]) ->Void)? = nil
    
  func doSomething()
  {
    let request = UserProductList.Something.Request()
    interactor?.doSomething(request: request)
    setSelectedData()
  }
  
    func setSelectedData() {
        
        print("ProductId -------------------------\(selectedProductId)")
        for i in 0..<(productData?.count ?? 0){
            if selectedProductId.contains("\(self.productData?[i].userFieldOptionId ?? "")"){
                self.productData?[i].isSelected = true
            }else{
                self.productData?[i].isSelected = false
            }
            if self.productData?[i].isSelected == true{
                selectedProductId.append(productData?[i].optionName ?? "")
                selectedProductId.append("\(productData?[i].userFieldOptionId ?? "")")
                
            }
        }
    }
  func displaySomething(viewModel: UserProductList.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    @IBAction func btnBackAction(_ sender: UIButton){
        self.navigationController?.popViewController(animated: true)
    }
    
    @IBAction func btnDoneAction(_ sender: UIButton){
        selectProductCallback?(selectedProductId, selectedProductName)
        self.navigationController?.popViewController(animated: true)
    }
}

extension UserProductListViewController: UITableViewDelegate, UITableViewDataSource{
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return productData?.count ?? 0
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let productListCell = tableView.dequeueReusableCell(withIdentifier: "ProductListTViewCell", for: indexPath) as? ProductListTViewCell else{return UITableViewCell()}
        let data = productData?[indexPath.row]
        productListCell.lblProductName.text = data?.optionName
        productListCell.btnCheckBox.setImage((data?.isSelected == true) ? UIImage(named: "icon_blueSelected") : UIImage(named: "icon_uncheckedBox"), for: .normal)
        return productListCell
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 50
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let data = productData?[indexPath.row]
        data?.isSelected =  !(data?.isSelected ?? false)
        if data?.isSelected == true {
            self.selectedProductName.append(data?.optionName ?? "")
            self.selectedProductId.append(data?.userFieldOptionId ?? "")
            
        } else{
            if let index = selectedProductId.firstIndex(of: data?.optionName ?? "") {
                self.selectedProductName.remove(at: index)
                self.selectedProductId.remove(at: index)
            }
        }
        print("ProductId -------------------------\(selectedProductId)")
        self.tableView.reloadData()
       // self.selectedProductId.append(productData?[indexPath.row].id ?? "")
        
    }
}
